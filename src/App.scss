// COLORS
$color-concluded: rgb(25, 96, 107);
$color-active: rgb(182, 119, 35);
// $color-proposed: rgb(225,87,90);
// mapbox values (equivalent in hue to above, but semi-transparent to reveal ovelrap etc)
// $color-concluded: rgba(0,80,92,.9);
// $color-active: rgba(175,105,12,.9);
// $color-proposed: rgba(223,70,73,.9);
$light-gray: #f7f7f7;
$semi-trans-light-gray: transparentize($light-gray, 0.2);
$trans-light-gray: transparentize($light-gray, 0.4);
$middle-gray: #eee;
$trans-middle-gray: transparentize($middle-gray, 0.5);
$dark-gray: #ccc;
$property-color: #757575;

// BASE BIL COLORS

// $slate-gray: #7E8085;
$slate-gray: #74757b;
$med-gray: #6d6d6d;
//$med-gray: #74757B;
$coldblack: #282f36;
$green: #00505c;
$tealgreen: #6ec9d7;
$button-bronze: #b26f16;
$button-bronze-active: #9a6013;
$dkbronze: #a36514;
$white: #ffffff;
$black: #373737;
$links: #04143c;
$linkshover: #9a6013;

// BOX-SHADOW

$box-shadow: rgba(0, 0, 0, 0.1) 0 1px 3px;
$very-trans-black: rgba(0, 0, 0, 0.1);
$trans-black: rgba(0, 0, 0, 0.3);

$hint-background: rgb(244, 253, 255);
$hint-content: rgb(59, 123, 138);

// SIZES
// NOTE: FS = full-screen, SS = small-screen (to be used inside the mobile-breakpoint)
$FS-card-width: 300px;
$mobile-breakpoint: $FS-card-width * 2;
$FS-dock-width: $FS-card-width * 3;
$FS-boundary-padding: 24px;
$SS-boundary-padding: 16px;
$FS-legend-width: 200px;
$FS-legend-height: 103px;
$SS-legend-height: 120px;
$scroll-hint-width: 224px;
$scroll-hint-height: 40px;
$selection-hint-width: 230px;
$selection-hint-height: 103px;
$max-point-hint-width: 425px;
$max-point-hint-height: 85px;
$card-peek-height: 100px;
$intro-panel-width: 430px;
$intro-panel-icon-offset: 8px;
$standard-border-radius: 4px;
$zoom-controls-top: 40vh;
$intro-next-prev-height: 60px;
$right-caret-padding: 8px 8px 4px 8px;
$left-caret-padding: 4px 8px 8px 8px;

* {
  margin: 0;
  padding: 0;
  word-wrap: break-word;
  //user-select: none;
  cursor: default;
  font-family: sofia-pro, sans-serif;
  font-weight: 400;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
}

html,
body,
#root,
.app,
.map-container {
  height: 100%;
  width: 100%;
}

.trigger-icon {
  stroke: black;
  stroke-width: 3;
  //fill: none;
  &.remove-icon,
  &.expand-icon,
  &.collapse-icon,
  &.stemless,
  &.legend {
    cursor: pointer;
    * {
      cursor: pointer;
    }
  }

  &.arrow {
    stroke-width: 1.5;
  }
  &.left.arrow {
    transform: rotate(180deg);
  }
  &.up.arrow {
    transform: rotate(270deg);
  }
  &.down.arrow {
    transform: rotate(90deg);
  }
}

.app {
  /* necessary to prevent dock from overflowing page on mobile */
  position: absolute;
  overflow: scroll;
  // filter messes with positioning of app/children. behaves correctly without implicitly setting
  // filter: blur(0px);
  transition: filter 2s ease;

  &.loading {
    filter: blur(4px);
  }
}

/* LOADING MASK */
.mask {
  position: fixed;
  display: flex;
  height: 100%;
  width: 100%;
  z-index: 100;
  background-color: $trans-light-gray;
  opacity: 1;
  &.loaded {
    background-color: transparent;
    opacity: 0;
    transform: translate(100%, 100%);
    transition: background-color ease 2s, opacity ease 0.5s 0.5s, transform ease 0s 2s;
  }
  .content {
    margin: auto;
    font-size: 22px;
    text-transform: uppercase;
    color: $color-concluded;
    transform: translate(0, 16px);
    .loading-dots {
      display: flex;
      justify-content: space-evenly;
      padding: 4px 4px 0 0;
      div {
        width: 18px;
        height: 18px;
        border-radius: 9px;
        animation: ball-pulse 1s ease infinite;
        // &:nth-child(1) {
        &:nth-child(odd) {
          animation-delay: -0.2s;
          background-color: $color-concluded;
        }
        // &:nth-child(2) {
        &:nth-child(even) {
          animation-delay: -0.1s;
          background-color: $color-active;
        }
        // &:nth-child(3) {
        //   background-color: $color-proposed;
        // }
      }
    }
  }
}

/* MAPBOX CONTROLS (need access to sass vars) */
.mapboxgl-ctrl-attrib-inner {
  strong {
    font-weight: bold;
  }
}

.mapboxgl-ctrl-top-right {
  //top: calc(#{$SS-legend-height} + #{$FS-boundary-padding} + #{$intro-panel-icon-offset});
  top: $zoom-controls-top;
  right: $FS-boundary-padding;
}

.mapboxgl-ctrl-group.custom {
  position: fixed;
  right: $FS-boundary-padding;
  top: calc(#{$zoom-controls-top} + 65px);
  z-index: 2;

  button.mapboxgl-ctrl-reset-view .mapboxgl-ctrl-icon {
    background-image: url(svg/mapboxgl-ctrl-reset-view.svg);
    background-size: 100%;
  }
}

/* CLICK POINT HINT */
.click-point-hint {
  transform: translateX(-50%);
  background-color: $hint-background;
  color: $hint-content;
  padding: 15px;
  text-align: left;
  display: inline;
  font-size: 14px;
  line-height: 1.3;
  font-weight: 600;
  border-radius: 4px;
  box-shadow: rgba(0, 0, 0, 0.1) 3px 3px 5px;
  text-transform: uppercase;
  position: absolute;
  left: 50%;
  bottom: 40px;
  // top: 50px; // to move the hint just below the point
  // left: 48px; // to move the hint just to the right of the point
  &.dismissed {
    opacity: 0;
    transition: opacity ease 1s;
    pointer-events: none;
  }
}

/* INTRO PANEL */
.intro-panel-wrapper {
  position: fixed;
  left: 0;
  z-index: 3;
  //top: $FS-boundary-padding;
  // bottom: calc(#{$FS-boundary-padding} + #{$card-peek-height});
  // won't stretch to bottom unless screen height is minimal (then scroll activates)
  top: $FS-boundary-padding;
  bottom: $FS-boundary-padding;
  max-height: 510px;
  min-height: 200px;
  width: $intro-panel-width;
  background: white;
  //border: solid $dark-gray 1px;
  overflow: visible;
  border-top-right-radius: $standard-border-radius;
  border-bottom-right-radius: $standard-border-radius;
  transition: left ease 1s;

  .intro-panel {
    height: 100%;
    overflow: scroll;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);
  }

  .trigger {
    position: absolute;
    z-index: 5;
    right: -32px;
    top: 10px;
    border: solid #fff 1px;
    border-left: none;
    border-top-right-radius: 4px;
    border-bottom-right-radius: 4px;
    background: white;
    box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2);
    .trigger-icon {
      width: 32px;
      padding: $left-caret-padding;
      height: 32px;
      stroke-width: 0.5;
    }
  }
  .mobile-trigger {
    // for use on small screens
    display: none;
  }

  &.closed {
    left: -$intro-panel-width;
    .trigger .trigger-icon {
      padding: $right-caret-padding;
    }
  }

  .content {
    padding: 32px;
    padding-bottom: 0;
    // height: 100%;
    position: absolute;
    background-color: white;
    z-index: 4;
    .nav {
      text-align: left;
      .section-name {
        white-space: nowrap;
        cursor: pointer;
        color: #757575;
        &.active {
          color: #000;
        }
      }
      p {
        display: inline;
        font-size: 14px;
        padding-right: 14px;
        user-select: text;
        &.active {
          font-weight: 700;
        }
      }
    }
    .nav {
      border-bottom: 1px solid $dark-gray;
      padding-bottom: 8px;
      // margin-bottom: 20px;
    }
    .header {
      display: flex;
      padding-bottom: 0px;
      margin-bottom: 20px;
      .info {
        flex: 27px 0;
        flex-shrink: 0;
        align-self: center;
        margin-top: 4px;
        margin-right: 5px;
        .info-icon {
          stroke-width: 0;
          width: 100%;
        }
      }
      h1 {
        padding-left: 10px;
        font-size: 18px;
        font-weight: 700;
        line-height: 1.3;
      }
    }

    .section-text {
      p {
        font-size: 14px;
        font-weight: 400;
        // padding: 4px 0;
        display: inline;
        color: $slate-gray;
        &.advance-button {
          // padding-left: 7px;
          font-weight: 700;
          white-space: nowrap;
          cursor: pointer;
        }
      }
    }
  }
  .content-body {
    padding: 0 32px 64px 32px;
    top: 152px;
    position: relative;
    font-weight: 400;
    font-size: 14px;
    line-height: 1.6;
    color: #74757b;
    .section-text {
      p {
        margin-bottom: 16px;
      }
    }
  }
  .citation-button {
    .prompt {
      text-transform: uppercase;
      font-weight: 700;
      white-space: nowrap;
      cursor: pointer;
      color: $black; // $dark-gray;
      &.active {
        cursor: pointer;
      }
    }
    .confirmation {
      display: none;
    }
    &.copied {
      .confirmation {
        display: inherit;
      }
    }
  }
  @media screen and (min-width: 0\0) and (min-resolution: +72dpi) {
    // IE9+, hide the button as navigator.clipboard is not available.
    p.citation-button {
      display: none;
    }
  }
  .bottom-controls {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: $intro-next-prev-height;
    background: white;
    border-top: #d4d4d4 1px solid;
    margin: 0 24px;
    .next-prev {
      display: flex;
      justify-content: space-between;
      width: 41%;
      margin: auto;
      padding-top: 16px;
      font-size: 14px;
      user-select: none;
      p.advance-button {
        // padding: 0;
        font-weight: 700;
        &.active {
          cursor: pointer;
        }
        &:not(.active) {
          color: $dark-gray;
          .trigger-icon {
            stroke: $dark-gray;
            cursor: unset;
            path {
              cursor: unset;
            }
          }
        }
        .trigger-icon {
          width: 10px;
          stroke-width: 2;
        }
      }
    }
  }
}

/* MAP */
.map-container {
  position: fixed;
  top: 0;
  bottom: 0;
}

/* LEGEND */
.legend {
  position: fixed;
  //top: $FS-boundary-padding;
  top: 32px;
  right: $FS-boundary-padding;
  //background: $semi-trans-light-gray;
  background: #fff;
  padding: 8px;
  border-radius: $standard-border-radius;
  font-size: 12px;
  box-shadow: $very-trans-black 3px 3px 5px;
}
.legend .content {
  text-transform: uppercase;
  div:first-of-type {
    margin-top: 6px;
  }
}
.legend div {
  padding: 4px;
  font-weight: 300;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

.legend i {
  width: 10px;
  height: 10px;
  display: inline-block;
  border-radius: 5px;
  margin-right: 8px;
}
.legend i.concluded {
  background: $color-concluded;
}
.legend i.active {
  background: $color-active;
}
// .legend i.proposed {
//   background: $color-proposed;
// }

.legend .trigger-icon {
  position: absolute;
  right: 5px;
  top: 5px;
  stroke: black;
  stroke-width: 1;
  fill: none;
  width: 16px;
}

.legend.hidden {
  background: transparent;
  box-shadow: none;
  .last-updated {
    color: #757575;
    color: #757575;
    margin-right: 40px;
    margin-top: -8px;
  }
  .trigger-icon {
    position: fixed;
    top: $FS-boundary-padding;
    right: $FS-boundary-padding;
    width: 40px;
    height: 40px;
    padding: 5px;
    border-radius: 50%;
  }
}
.legend.hidden .content {
  display: none;
}

/* TOOLTIP */
.tooltip {
  z-index: 10;
  background: white;
  /* overflows map with absolute */
  position: fixed;
  padding: 15px;
  max-width: 210px;
  box-shadow: $very-trans-black 3px 3px 5px;
  border-top: gray solid 8px;
  border-radius: $standard-border-radius;
}

.tooltip.concluded {
  border-top-color: $color-concluded;
}
.tooltip.active {
  border-top-color: $color-active;
}
// .tooltip.proposed {
//   border-top-color: $color-proposed;
// }

.tooltip .detail {
  font-size: 14px;
  padding-top: 5px;
}

.tooltip .name {
  font-weight: 700;
  font-size: 15px;
}

.tooltip .click-hint {
  font-size: 12px;
  font-weight: 400;
  padding-top: 16px;
  text-align: left;
  text-transform: uppercase;
  color: #757575;
}

.tooltip .location-title {
  padding-top: 8px;
  font-weight: 400;
  font-size: 12px;
  text-transform: uppercase;
  color: #757575;
}

.tooltip .hovered-location.emphasized {
  font-weight: 700;
}

/* CARD DOCK */

.bottom-mask {
  background: white;
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 5;
}

.card-dock-mask {
  transition: background-color ease 0.8s;
}
.card-dock-mask.active {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 100vh;
  display: flex;
  background-color: $trans-black;
  z-index: 5;

  &.card-count-1 {
    min-width: $FS-card-width * 1;
  }
  &.card-count-2 {
    min-width: $FS-card-width * 2;
  }
  &.card-count-3 {
    min-width: $FS-card-width * 3;
  }
}

.card-dock-container {
  // background-color: $middle-gray;
  background-color: #fff;
  flex: 1 0 auto;
  z-index: 5;
  position: absolute;
  /* dock background initially just off-screen, appears when user scrolls up */
  top: 100vh;
  min-width: 100%; // fixes pesky variable container width bug below
  box-shadow: $very-trans-black 0px 0px 10px 3px;

  .side-buttons {
    position: fixed;
    right: $SS-boundary-padding;
    bottom: -200px;
    transition: bottom ease 0.8s;
    //box-shadow: $box-shadow;
    z-index: 5;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);
    &.active {
      bottom: $FS-boundary-padding;
    }

    div {
      height: 75px; //60px
      width: 75px; //64px
      background-repeat: no-repeat;
      background-color: white;
      background-position: center;
      cursor: pointer;

      &:not(:first-of-type) {
        border-top: 1px solid $middle-gray;
      }
    }
    .scroll-up-button,
    .share-export {
      transition: background-color 0.3s ease, color 0.3s ease;
      background-color: $button-bronze;
      &:hover {
        background-color: $button-bronze-active;
      }
    }
    .scroll-up-button {
      background-size: 100%;
      background-image: url(png/scrollTop.svg);
    }
    .share-export {
      background-size: 100%;
      background-image: url(png/shareExport.svg);
    }
  }

  .user-hint {
    text-transform: uppercase;
    background: $hint-background;
    color: $hint-content;
    font-size: 16px; //FS
    font-size: 14px;
    .trigger-icon {
      stroke: $hint-content;
      // stroke-width: 8; //FS
      width: 12px; //FS
    }

    &.scroll-hint {
      text-align: center;
      position: absolute;
      /* center hint above the first card */
      left: calc((#{$FS-card-width} - #{$scroll-hint-width}) / 2);
      width: $scroll-hint-width;
      top: -$scroll-hint-height;
      height: $scroll-hint-height;
      animation: slide-up 1.2s forwards;
      &.dismissed {
        top: 100vh;
        transition: top ease 3s;
      }
      .content {
        padding: 10px;
        font-weight: 600;
      }
    }

    &.selection-hint {
      position: absolute;
      top: $card-peek-height;
      width: $selection-hint-width;
      height: $selection-hint-height;
      left: 0;
      &:not(.scroll-initiated) {
        visibility: hidden;
      }
      &.scroll-initiated {
        transition: left ease 1s;
        left: $FS-card-width;
      }
      &.dismissed {
        transition: left ease 1s;
        left: 0;
      }
      .content {
        padding: 20px;
        font-weight: 600;
        p {
          font-weight: 600;
        }
        svg {
          position: relative;
          // top: 44%;
          // right: 20px;
          margin-left: 8px;
          position: relative;
          top: 2px;
        }
        .maximum {
          display: inline-block;
        }
      }
    }
    &.max-point-hint {
      position: absolute;
      width: $max-point-hint-width;
      height: $max-point-hint-height;
      left: calc((#{$FS-dock-width} - #{$max-point-hint-width}) / 2);
      top: 0;
      &:not(.triggered) {
        // display: none;
        transform: scale(0);
      }
      &.triggered {
        transition: top ease 0.8s;
        top: -$max-point-hint-height;

        &.dismissed {
          top: 0;
          transform: scale(0);
          transition: top ease 0.8s, transform 0s 0.8s;
        }
      }
      .content {
        text-align: center;
        padding: 20px;
      }
      .trigger-icon {
        position: absolute;
        top: 10px;
        right: 10px;
        stroke-width: 1;
      }
    }
  }

  // REMOVED BECAUSE SHOULD ONLY APPLY TO CARD-COUNT-3, add class to card-container if needed
  // solved instead by giving card-container 100% min-width rather than width
  // @media screen and (max-width: $FS-dock-width) {
  //   // goes with below media query, prevents container from leaving empty space to right on scroll
  //   // width: unset;
  // }

  .card-dock {
    height: 100%;

    // dock always takes up 3-card width (when screen ample size)
    width: $FS-dock-width;
    // card-table takes up the actual width of the cards
    &.card-count-1 .card-table {
      width: $FS-card-width * 1;
    }
    &.card-count-2 .card-table {
      width: $FS-card-width * 2;
    }
    &.card-count-3 .card-table {
      width: $FS-card-width * 3;
    }

    // the card-dock is centered (unmoved by card-count)
    margin-left: calc((100vw - #{$FS-dock-width}) / 2);
    @media screen and (max-width: $FS-dock-width) {
      // but don't allow it to overflow left side of screen
      margin-left: 0;
      // nor the empty portion of the dock to overflow the right
      width: 100%;
    }

    .card-table {
      position: relative;
      /* top of card should stick up above window bottom */
      top: -$card-peek-height; //FS
      // tough to mesh with card animation onto screen
      // box-shadow: rgba(0, 0, 0, 0.1) -2px -4px 10px 2px;
      box-shadow: $box-shadow;
      // box-shadow: $very-trans-black -2px -4px 10px 2px;

      .print-intro {
        display: none;
      }

      .row {
        height: 100%; //?
        display: flex;
        // just so it appears above dismissed user-hints
        position: relative;
      }

      .card {
        max-width: $FS-card-width; //FS
        flex: 1 0 0;
        // height: 100%;
        display: inline-block;
        // vertical-align: top;

        animation: slide-up 0.8s forwards;
      }

      .cell {
        // don't add different side padding for different cell types
        // or cells won't align vertically
        padding: 16px; //FS
        // display: inline-block;
        // box-sizing: border-box;
        height: 100%; //?
        position: relative;
        .property-name .trigger-icon {
          position: absolute;
          width: 14px;
          right: 0;
          top: 4px;
          box-sizing: content-box;
          padding: 5px;
        }
        .property-name {
          color: $property-color;
        }
        .property-name,
        .location-title {
          font-weight: 300;
          font-size: 12px;
          letter-spacing: 0.1em;
          text-transform: uppercase;
        }
        .location-title {
          padding-top: 3px;
          white-space: nowrap;
          text-overflow: ellipsis;
          overflow: hidden;
        }
        .location-cell-content:not(:last-child) {
          padding-bottom: 5px;
        }

        &.feature-header {
          .property-name {
            color: $property-color;
            font-weight: 700;
            text-align: center;
          }
          .value {
            padding: 0;
          }
        }

        .value {
          // overflow: hidden;
          padding-top: 8px;
          font-size: 14px; //FS

          a {
            display: block;
            cursor: pointer;
            padding-bottom: 8px;
            color: $links;
            &:hover {
              color: $linkshover;
            }
          }
        }
        // FIELDS NO LONGER EXPANDIBLE
        // &.expandible {
        //   max-height: 3000px;
        //   transition: max-height ease-in .2s;
        //   overflow: hidden;

        //   &:not(.expanded) {
        //     transition: max-height ease-out .2s;
        //     // important because it has to override the inline style set by JS
        //     max-height: 75px !important;

        //     &:before {
        //       height: 20px;
        //     }
        //   }
        //   // gradient text to fade unexpanded cells
        //   &:before {
        //     content: '';
        //     width: 100%;
        //     height: 0px;
        //     transition: height ease-in-out .3s;
        //     position: absolute;
        //     left: 0;
        //     bottom: 0;
        //     // appropriate color given with alternating row colors
        //   }
        // }
      }

      // HEADER (NAME) STYLES
      .row.header {
        border-top-left-radius: 12px;
        border-top-right-radius: 12px;
        height: $card-peek-height;

        .card {
          border-top-width: 8px;
          border-top-style: solid;
          &.concluded {
            border-top-color: $color-concluded;
          }
          &.active {
            border-top-color: $color-active;
          }
          // &.proposed {
          //   border-top-color: $color-proposed;
          // }
          &:first-child {
            border-top-left-radius: 3px;
          }
          &:last-child {
            border-top-right-radius: 3px;
          }
          &:not(first-child) {
            // to compensate for border-left added to other cells
            // width: $FS-card-width + 1px;
          }

          .cell {
            padding-top: 20px; //FS
            // height: 100px;
            font-size: 15px; //FS
            line-height: 21px; //FS
            letter-spacing: 0.03em;
            word-wrap: break-word;
            /* so trigger has a positioned element to hang onto */
            position: relative;
            font-weight: 700;

            .remove-icon {
              position: absolute;
              width: 22px; //FS
              top: 0; //FS
              right: 0; //FS
              padding: 6px;
              box-sizing: content-box;
              stroke: #757575;
              stroke-width: 1;
            }
          }
        }
      }
    }

    /* alternating row colors */
    .row:nth-child(odd) .card {
      background-color: #f8f8f8;
      background-color: #f9f9f9;
      // .cell.expandible:not(.expanded):before {
      //   // appropriate color for text fade
      //   background: linear-gradient(transparent, $light-gray 15px);
      // }
    }
    .row:nth-child(even) .card {
      background-color: white;
      // .cell.expandible:not(.expanded):before {
      //   // appropriate color for text fade
      //   background: linear-gradient(transparent, white 15px);
      // }
    }
    .row .card .cell {
      //  border: solid $trans-middle-gray .5px;
    }
  }
}

.export-footer {
  display: flex;
  justify-content: space-evenly;
  align-items: flex-start;
  padding-right: 90px; // make room for side-buttons
  padding-top: 15px;
  padding-bottom: 100px;

  .section {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-bottom: 25px;
    max-width: 190px;

    .title {
      font-size: 23px;
    }

    .description {
      text-align: center;
      font-size: 15px;
      padding-top: 10px;
      padding-bottom: 15px;
    }

    .button-group {
      width: 150px;
      height: 42px;
      .button {
        width: 100%;
        height: 100%;
        padding-top: 9px;
        background: $button-bronze;
        color: white;
        font-size: 15px;
        text-align: center;
        vertical-align: middle;
        cursor: pointer;
        display: inline-block;
      }
    }

    .icon {
      width: 100px;
      height: 100px;
      background-repeat: no-repeat;
      background-color: white;
      background-position: center;
      background-size: 70%;
    }

    &.print {
      .icon {
        background-size: 90%;
        background-image: url(svg/print-icon.svg);
      }
    }
    &.export {
      .icon {
        background-image: url(svg/export-icon.svg);
      }
    }
    &.share {
      // flex-basis: 184px;
      flex-shrink: 0;

      .icon {
        background-image: url(svg/share-icon.svg);
      }

      .button-group {
        width: 100%;
        input {
          height: 100%;
          width: 100px;
          font-size: 14px;
          padding: 5px;
          color: $med-gray;
          z-index: 1;
        }
        .button {
          width: 80px;
          // keeps it in line with text input
          position: relative;
          top: -2px;
        }
      }
      .socialshare {
        display: flex;
        width: 80px;
        justify-content: space-between;
        margin-top: 24px;
        a {
          cursor: pointer;
        }
        .twitter,
        .fb {
          cursor: pointer;
          width: 27px;
          height: 30px;
          background-repeat: no-repeat;
          background-size: contain;
          svg {
            cursor: pointer;
            path {
              cursor: pointer;
              fill: #74757b;
            }
            &:hover {
              path {
                fill: #b26f16;
              }
            }
          }
        }
        .fb {
          // background-image: url(svg/fb-icon.svg);
          height: 22px;
          &:hover {
            //background-image: url(svg/fb-icon-active.svg);
            transition: 0.3s ease;
          }
        }
        .twitter {
          // background-image: url(svg/tw-icon.svg);
          height: 23px;
          &:hover {
            //background-image: url(svg/tw-icon-active.svg);
            transition: 0.3s ease;
          }
        }
      }
    }
  }
}

/* ~~~~~~~ END FS STYLES | BEGIN MOBILE STYLES ~~~~~~~ */

@media (max-width: $mobile-breakpoint) {
  /* MAPBOX CONTROLS */
  .mapboxgl-ctrl-top-right,
  .mapboxgl-ctrl-group.custom {
    right: $SS-boundary-padding;
  }

  /* INTRO PANEL */
  .intro-panel-wrapper {
    //top: calc(#{$SS-legend-height} + #{$SS-boundary-padding});
    top: $SS-boundary-padding;
    bottom: $SS-boundary-padding;
    bottom: 100px;
    right: 0;
    width: 100%;
    max-height: 510px;

    .content {
      padding: 32px 32px 0px 32px;
      /* padding-bottom: 60px; */
      position: absolute;
      background-color: white;
      z-index: 4;
    }

    .trigger {
      right: 0px;
      top: 4px;
      border: none;
      box-shadow: none;
      // z-index: 5;
      width: 42px;
      height: 48px;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    &.closed {
      left: -100%;
      .trigger {
        .right.arrow {
          // HACK treat like it's still a left arrow - small screens use the info-icon to open
          transform: rotate(180deg);
          padding: $left-caret-padding;
        }
      }
    }
    .mobile-trigger {
      display: block;
      .trigger-icon.info-icon {
        position: fixed;
        left: $SS-boundary-padding;
        top: $SS-boundary-padding;
        stroke-width: 0;
        width: 40px;
        padding: 5px;
        cursor: pointer;
        * {
          cursor: pointer;
        }
      }
    }

    .content-body {
      position: relative;
      top: 160px;
      padding: 32px;
      // so text isn't obscured by controls
      padding-bottom: $intro-next-prev-height;
    }

    .content-nav .bottom-controls {
      border-top: #d4d4d4 1px solid;
      margin: 0 24px;
      .next-prev {
        width: 80%;
      }
    }
    .content .nav {
      text-align: left;
      margin-bottom: 0;
      .section-name {
        white-space: break-spaces;
        display: inline-block;
      }
    }
  }

  /* CLICK POINT HINT */

  /* LEGEND */
  .legend {
    position: fixed;
    top: 0;
    right: 0;
    width: 100%;
    //height: $SS-legend-height;
    height: 112px;
    padding: 0;
    background: white;
    width: 248px;
    padding: 2px 0 0 0;
    background: white;
    margin: auto;
    margin-top: 16px;
  }
  .legend .content {
    padding: 16px 16px 0;
    font-size: 12px;
    letter-spacing: 0.1em;
  }
  .legend i {
    width: 14px;
    height: 14px;
    border-radius: 7px;
    margin-right: 14px;
    // keeps them in line with text
    position: relative;
    top: 2px;
  }
  .legend .last-updated {
    margin-left: 16px;
    margin-top: unset;
    margin-right: unset;
  }
  .legend.hidden .last-updated {
    margin-left: unset;
    margin-top: 4px;
    margin-right: unset;
  }
  .legend .trigger-icon {
    right: 10px;
    top: 8px;

    &.legend {
      right: $SS-boundary-padding;
      top: $SS-boundary-padding;
      margin: 0;
    }
  }

  /* DOCK */
  .card-dock-container {
    width: unset;
    min-width: 100vw;
    .side-buttons.active {
      bottom: 152px;
    }
    .user-hint {
      &.scroll-hint {
        left: calc(50vw - (#{$scroll-hint-width} / 2));
        .content {
          font-weight: 600;
        }
      }
      &.selection-hint {
        top: -$selection-hint-height;
        &.scroll-initiated {
          .content {
            font-weight: 600;
            p {
              font-weight: 600;
            }
          }
          animation: slide-up 1.2s forwards;
          left: calc(50vw - (#{$selection-hint-width}) / 2);
          &.dismissed {
            top: 0;
            width: 0;
            height: 0;
            transition: top ease 0.8s, width ease 0s 0.8s, height ease 0s 0.8s;
          }
        }
      }
    }

    .card-dock {
      width: 100%;
      .card-table {
        top: -240px;
      }
      &.card-count-1 .card-table .card {
        // width: 100%;
        // allow a single card on mobile to take up the screen width rather than just $FS-card-width
        // (but don't unset because we still don't want long place names to cause overflow)
        max-width: 100vw;
      }
      &.card-count-1 .card-table,
      &.card-count-2 .card-table,
      &.card-count-3 .card-table {
        width: 100%;
        .card {
          width: $FS-card-width;
        }
      }
    }
  }

  .export-footer {
    position: relative;
    top: -200px;
  }
  .export-footer.card-count-1 {
    flex-direction: column;
    padding-right: 35px; // smaller gutter for side-buttons on mobile
  }
}

@keyframes ball-pulse {
  0%,
  100%,
  60% {
    opacity: 1;
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  30% {
    opacity: 0.1;
    -webkit-transform: scale(0.01);
    transform: scale(0.01);
  }
}
@keyframes slide-right {
  from {
    transform: translate(-$FS-card-width);
    z-index: 1;
  }
  to {
    transform: translate(0);
    z-index: 20;
  }
}
@keyframes slide-left {
  from {
    transform: translate(100vw);
  }
  to {
    transform: translate(0);
  }
}
@keyframes slide-up {
  from {
    transform: translate(0, 100vh);
  }
  to {
    transform: translate(0);
  }
}
@keyframes pop-up {
  from {
    transform: translate(0, 0);
  }
  to {
    transform: translate(0, -$selection-hint-height);
  }
}

@media print {
  body {
    overflow: visible;
  }
  #root {
    .intro-panel-wrapper,
    .mapboxgl-ctrl,
    .map-container.mapboxgl-map,
    .legend,
    .export-footer,
    .side-buttons,
    .user-hint,
    svg.x-close {
      display: none;
    }
    width: 100%;
    height: auto;
    margin: 0;
    float: none;
    * {
      -webkit-print-color-adjust: exact !important; /*Chrome, Safari */
      color-adjust: exact !important; /*Firefox*/
    }
    .app {
      position: relative;
      overflow: visible;
      height: 100%;
    }
    .card-dock-mask {
      position: relative;
      min-width: 100%;
      background: transparent;
      &.active {
        position: relative;
        top: auto;
        left: auto;
        right: auto;
        bottom: auto;
        height: 100%;
        min-width: 100%;
        &.card-count-3 {
          min-width: 100%;
        }
      }
      .card-dock-container {
        position: relative;
        top: 220px !important; // Chrome
        @-moz-document url-prefix() {
          top: 120px !important; // Firefox
        }
        _::-webkit-full-page-media,
        _:future,
        :root .safari_only {
          top: 120px !important; // Safari
        }
        display: inline;
        height: 100%;
        box-shadow: none !important;
        .card-dock {
          margin-left: auto !important;
          margin-right: auto !important;
          height: 100% !important;
          width: 100% !important;
          .card-table {
            width: 100% !important;
            box-shadow: none !important;
            .print-intro {
              display: block;
              width: 100%;
              padding-bottom: 1rem;
              p {
                font-weight: 300;
              }
            }
            .user-hint {
              display: none;
            }
            .card {
              max-width: auto;
            }
            .row {
              .cell.website {
                a {
                  word-break: break-all;
                }
              }
            }
          }
          &.card-count-2 {
            .card {
              //max-width: 50% !important; -- Does not work on Safari; cuts off 2nd card --JM
            }
          }
          // &.card-count-3 {
          //   .row:nth-of-type(10) {
          //     page-break-after: always;
          //   }
          //   .row:nth-of-type(17) {
          //     page-break-after: always;
          //   }
          // }
          // &.card-count-2 {
          //   .row:nth-of-type(11) {
          //     page-break-after: always;
          //   }
          //   .row:nth-of-type(18) {
          //     page-break-after: always;
          //   }
          // }
          // &.card-count-1 {
          //   .row:nth-of-type(14) {
          //     page-break-after: always;
          //   }
          // }
        }
      }
    }
  }
}
